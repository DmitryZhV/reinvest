version: '3'

# хранилища
volumes:
  pgdata:
      driver: local

services:
    nginx:
    # при падении будет стараться подняться
      restart: always
    # только свежий nginx
      image: nginx:latest
    # слушает порт 8080
      expose:
         - 8080
    # мапаем порт 80 на его 8080. Тогда сайт будет доступен по адресу localhost. Убедись, что порт у тебя не занят.
      ports:
        - "80:8080"
    # монтируем только те директории, в которых лежит статика, т.к. nginx с динамикой не будет работать. Также директорию с логами и файл настройки, который мы подготовили.
      volumes:
          - ./static:/code/static
          - ./media:/code/media
          - ./logs:/code/logs
          - ./nginx:/etc/nginx/conf.d
    # и nginx зависит от контейнера python. Т.е. python должен быть запущен первым
      depends_on:
          - web
    postgres:
      image: postgres
      ports:
        - 5432:5432
      environment:
        - POSTGRES_DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - PGDATA=/var/lib/postgresql/data
      volumes:
        - pgdata:/var/lib/postgresql/data
    web:
      build: .
      #command: python manage.py runserver 0.0.0.0:8000
      volumes:
        - .:/code
      ports:
        - "8000:8000"
      # запускаем gunicorn
      command: "gunicorn -c gunicorn.py reinvest.wsgi"
      depends_on:
        - postgres
